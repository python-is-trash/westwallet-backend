import { supabase } from '../db/supabase.js';

export const exportService = {
  /**
   * Export all users
   */
  async exportAllUsers() {
    const { data: users } = await supabase
      .from('users')
      .select('*')
      .order('created_at', { ascending: false });

    return users || [];
  },

  /**
   * Export users with X+ referrals
   */
  async exportUsersByReferralCount(minCount) {
    const { data: users } = await supabase
      .rpc('get_users_by_referral_count', { min_count: minCount });

    return users || [];
  },

  /**
   * Export users whose referrals made deposits
   */
  async exportUsersWithReferralDeposits() {
    const { data: users } = await supabase
      .from('users')
      .select(`
        *,
        referrals!referrals_referrer_id_fkey (
          referred_id,
          referred:users!referrals_referred_id_fkey (
            id,
            deposits (id, amount, status)
          )
        )
      `);

    // Filter users who have referrals with deposits
    const filtered = users?.filter(user => {
      return user.referrals?.some(ref =>
        ref.referred?.deposits?.length > 0
      );
    }) || [];

    return filtered;
  },

  /**
   * Export users with deposits >= min_amount
   */
  async exportUsersByDepositAmount(minAmount) {
    const { data } = await supabase
      .from('users')
      .select(`
        *,
        deposits (amount, status)
      `);

    // Calculate total deposits and filter
    const filtered = data?.map(user => {
      const totalDeposits = user.deposits
        ?.filter(d => d.status === 'completed')
        ?.reduce((sum, d) => sum + parseFloat(d.amount), 0) || 0;

      return {
        ...user,
        total_deposits: totalDeposits
      };
    }).filter(user => user.total_deposits >= minAmount) || [];

    return filtered;
  },

  /**
   * Export users with active investments
   */
  async exportActiveInvestors() {
    const { data: users } = await supabase
      .from('users')
      .select(`
        *,
        investments!investments_user_id_fkey (
          id, amount, status, crypto_type
        )
      `);

    // Filter users with active investments
    const filtered = users?.filter(user =>
      user.investments?.some(inv => inv.status === 'active')
    ) || [];

    return filtered;
  },

  /**
   * Export top earners by referral earnings
   */
  async exportTopEarners(limit = 100) {
    const { data } = await supabase
      .from('users')
      .select(`
        *,
        referral_earnings!referral_earnings_referrer_id_fkey (amount)
      `);

    // Calculate total earnings and sort
    const withEarnings = data?.map(user => {
      const totalEarnings = user.referral_earnings
        ?.reduce((sum, e) => sum + parseFloat(e.amount), 0) || 0;

      return {
        ...user,
        total_earnings: totalEarnings
      };
    }).sort((a, b) => b.total_earnings - a.total_earnings)
      .slice(0, limit) || [];

    return withEarnings;
  },

  /**
   * Format users as CSV
   */
  formatAsCSV(users) {
    if (!users || users.length === 0) {
      return 'No users found';
    }

    const headers = [
      'ID',
      'Telegram ID',
      'Username',
      'First Name',
      'Balance USDT',
      'Balance TON',
      'Balance SOL',
      'Balance STARS',
      'Referral Code',
      'Registration Date',
      'Last Activity'
    ].join(',');

    const rows = users.map(user => [
      user.id,
      user.telegram_id,
      user.username || '',
      user.first_name || '',
      user.balance_usdt || 0,
      user.balance_ton || 0,
      user.balance_sol || 0,
      user.balance_stars || 0,
      user.referral_code || '',
      user.created_at,
      user.last_activity || ''
    ].join(','));

    return [headers, ...rows].join('\n');
  },

  /**
   * Get help message for export command
   */
  getHelpMessage() {
    return `
üìä *–ö–æ–º–∞–Ω–¥–∞ /exportusers - –≠–∫—Å–ø–æ—Ä—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π*

*–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:*
\`/exportusers <—Ç–∏–ø> [–ø–∞—Ä–∞–º–µ—Ç—Ä]\`

*–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–∏–ø—ã —ç–∫—Å–ø–æ—Ä—Ç–∞:*

1Ô∏è‚É£ \`/exportusers all\`
   –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

2Ô∏è‚É£ \`/exportusers refs <—á–∏—Å–ª–æ>\`
   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å X+ —Ä–µ—Ñ–µ—Ä–∞–ª–∞–º–∏
   –ü—Ä–∏–º–µ—Ä: \`/exportusers refs 10\`

3Ô∏è‚É£ \`/exportusers refs_deposits\`
   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏, —á—å–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—ã —Å–¥–µ–ª–∞–ª–∏ –¥–µ–ø–æ–∑–∏—Ç—ã

4Ô∏è‚É£ \`/exportusers deposits <—Å—É–º–º–∞>\`
   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å –¥–µ–ø–æ–∑–∏—Ç–∞–º–∏ >= X
   –ü—Ä–∏–º–µ—Ä: \`/exportusers deposits 100\`

5Ô∏è‚É£ \`/exportusers investors\`
   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å –∞–∫—Ç–∏–≤–Ω—ã–º–∏ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è–º–∏

6Ô∏è‚É£ \`/exportusers top <–ª–∏–º–∏—Ç>\`
   –¢–æ–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –∑–∞—Ä–∞–±–æ—Ç–∫—É
   –ü—Ä–∏–º–µ—Ä: \`/exportusers top 50\`

*–ü—Ä–∏–º–µ—Ä—ã:*
‚Ä¢ \`/exportusers all\` - –≤—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
‚Ä¢ \`/exportusers refs 5\` - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å 5+ —Ä–µ—Ñ–µ—Ä–∞–ª–∞–º–∏
‚Ä¢ \`/exportusers deposits 50\` - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å –¥–µ–ø–æ–∑–∏—Ç–æ–º $50+
‚Ä¢ \`/exportusers top 100\` - —Ç–æ–ø 100 –ø–æ –∑–∞—Ä–∞–±–æ—Ç–∫—É

üìù –†–µ–∑—É–ª—å—Ç–∞—Ç –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ —Ñ–æ—Ä–º–∞—Ç–µ CSV —Ñ–∞–π–ª–∞.
    `.trim();
  }
};
